version: "2"

services:

  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    ports:
      - "5602:443"
      - "5603:444"
      # - "5604:445"
    env_file:
      - ./.env
    restart: on-failure
    depends_on:
      - ${KIBANA_HOST}
    networks:
      - es

  elasticsearch:
    build:
      context: ./elasticsearch/
      dockerfile: Dockerfile
    environment:
      SERVER_NAME: ${ELASTIC_HOST}
    volumes:
      - ./docker_elasticsearch/data/:/var/data/elasticsearch/
    restart: on-failure
    # healthcheck:
    #   test: ["CMD", "curl",  "--silent", "-f", "localhost:9200/_cluster/health || exit 1"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 3
    #   start_period: 40s
    networks:
      - es

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.2.4 
    # depends_on:
    #   elasticsearch:
    #     condition: service_healthy
    depends_on:
      - ${ELASTIC_HOST}
    environment:
      SERVER_NAME: ${KIBANA_HOST}
      ELASTICSEARCH_URL: ${ELASTIC_FULL_URL}
    restart: on-failure
    networks:
      - es

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.2.4
    # build:
    #   context: ./logstash/
    #   dockerfile: Dockerfile
    env_file:
      - ./.env
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - ${ELASTIC_HOST}
    networks:
      - es

# Persisting volumes
volumes:
  nginx:
  elasticsearch:
  kibana:
  logstash:

networks:
  es:
